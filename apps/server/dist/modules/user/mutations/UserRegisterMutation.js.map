{"version":3,"file":"UserRegisterMutation.js","names":["mutationWithClientMutationId","name","inputFields","email","type","GraphQLNonNull","GraphQLString","password","mutateAndGetPayload","rest","console","log","hasUser","UserModel","countDocuments","trim","Error","user","save","token","generateJwtToken","_id","id","sucess","outputFields","resolve","me","UserType","findById"],"sources":["../../../../src/modules/user/mutations/UserRegisterMutation.ts"],"sourcesContent":["import { GraphQLString, GraphQLNonNull } from 'graphql';\nimport { mutationWithClientMutationId } from 'graphql-relay';\nimport { generateJwtToken } from '../../../auth';\n\nimport { UserModel } from '../UserModel';\nimport { UserType } from '../UserType';\n\n\nexport default mutationWithClientMutationId({\n    name: 'UserRegister',\n    inputFields: {\n        email: { type: new GraphQLNonNull(GraphQLString) },\n        password: { type: new GraphQLNonNull(GraphQLString) },\n    },\n    mutateAndGetPayload: async ({ email, ...rest }) => {\n        console.log(...rest)\n        const hasUser =\n            (await UserModel.countDocuments({ email: email.trim() })) > 0;\n\n        if (hasUser) {\n            throw new Error('This email has been registered. Please try again!');\n        }\n\n        const user = new UserModel({\n            ...rest,\n            email,\n        });\n\n        await user.save();\n        const token = generateJwtToken(user._id);\n\n\n        return {\n            token,\n            id: user._id,\n            sucess: 'Success!',\n        };\n    },\n    outputFields: {\n        token: {\n            type: GraphQLString,\n            resolve: ({ token }) => token,\n        },\n        me: {\n            type: UserType,\n            resolve: async ({ id }) => await UserModel.findById({ _id: id }),\n        },\n    },\n});"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;eAGe,IAAAA,0CAAA,EAA6B;EACxCC,IAAI,EAAE,cADkC;EAExCC,WAAW,EAAE;IACTC,KAAK,EAAE;MAAEC,IAAI,EAAE,IAAIC,uBAAJ,CAAmBC,sBAAnB;IAAR,CADE;IAETC,QAAQ,EAAE;MAAEH,IAAI,EAAE,IAAIC,uBAAJ,CAAmBC,sBAAnB;IAAR;EAFD,CAF2B;EAMxCE,mBAAmB;IAAA,8BAAE,iBAA8B;MAAA,IAAvB;QAAEL;MAAF,CAAuB;MAAA,IAAXM,IAAW;;MAC/CC,OAAO,CAACC,GAAR,CAAY,GAAGF,IAAf;MACA,MAAMG,OAAO,GACT,OAAOC,oBAAA,CAAUC,cAAV,CAAyB;QAAEX,KAAK,EAAEA,KAAK,CAACY,IAAN;MAAT,CAAzB,CAAP,IAA4D,CADhE;;MAGA,IAAIH,OAAJ,EAAa;QACT,MAAM,IAAII,KAAJ,CAAU,mDAAV,CAAN;MACH;;MAED,MAAMC,IAAI,GAAG,IAAIJ,oBAAJ,iCACNJ,IADM;QAETN;MAFS,GAAb;MAKA,MAAMc,IAAI,CAACC,IAAL,EAAN;MACA,MAAMC,KAAK,GAAG,IAAAC,sBAAA,EAAiBH,IAAI,CAACI,GAAtB,CAAd;MAGA,OAAO;QACHF,KADG;QAEHG,EAAE,EAAEL,IAAI,CAACI,GAFN;QAGHE,MAAM,EAAE;MAHL,CAAP;IAKH,CAvBkB;;IAAA;MAAA;IAAA;EAAA,GANqB;EA8BxCC,YAAY,EAAE;IACVL,KAAK,EAAE;MACHf,IAAI,EAAEE,sBADH;MAEHmB,OAAO,EAAE,CAAC;QAAEN;MAAF,CAAD,KAAeA;IAFrB,CADG;IAKVO,EAAE,EAAE;MACAtB,IAAI,EAAEuB,kBADN;MAEAF,OAAO;QAAA,8BAAE,WAAO;UAAEH;QAAF,CAAP;UAAA,aAAwBT,oBAAA,CAAUe,QAAV,CAAmB;YAAEP,GAAG,EAAEC;UAAP,CAAnB,CAAxB;QAAA,CAAF;;QAAA;UAAA;QAAA;MAAA;IAFP;EALM;AA9B0B,CAA7B,C"}