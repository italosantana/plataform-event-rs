{"version":3,"file":"auth.js","names":["getUser","token","split","decodedToken","jwt","verify","config","JWT_SECRET","user","UserModel","findOne","_id","id","generateJwtToken","userId","sign"],"sources":["../src/auth.ts"],"sourcesContent":["import jwt from 'jsonwebtoken';\n\nimport { UserModel, UserDocument } from './modules/user/UserModel';\nimport { config } from './config';\n\nexport const getUser = async (token?: string): Promise<UserDocument> => {\n    //@ts-ignore\n    if (!token) return null;\n\n    // TODO: Maybe it should be a crime\n    [, token] = token.split('JWT ');\n\n    const decodedToken = jwt.verify(token, config.JWT_SECRET) as { id: string };\n\n    const user = await UserModel.findOne({ _id: decodedToken.id });\n\n    //@ts-ignore\n    if (!user) return null;\n\n    return user;\n};\n\nexport const generateJwtToken = (userId: string) => `JWT ${jwt.sign({ id: userId }, config.JWT_SECRET)}`;\n"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;;;AAEO,MAAMA,OAAO;EAAA,6BAAG,WAAOC,KAAP,EAAiD;IACpE;IACA,IAAI,CAACA,KAAL,EAAY,OAAO,IAAP,CAFwD,CAIpE;;IACA,GAAGA,KAAH,IAAYA,KAAK,CAACC,KAAN,CAAY,MAAZ,CAAZ;;IAEA,MAAMC,YAAY,GAAGC,qBAAA,CAAIC,MAAJ,CAAWJ,KAAX,EAAkBK,cAAA,CAAOC,UAAzB,CAArB;;IAEA,MAAMC,IAAI,SAASC,oBAAA,CAAUC,OAAV,CAAkB;MAAEC,GAAG,EAAER,YAAY,CAACS;IAApB,CAAlB,CAAnB,CAToE,CAWpE;;IACA,IAAI,CAACJ,IAAL,EAAW,OAAO,IAAP;IAEX,OAAOA,IAAP;EACH,CAfmB;;EAAA,gBAAPR,OAAO;IAAA;EAAA;AAAA,GAAb;;;;AAiBA,MAAMa,gBAAgB,GAAIC,MAAD,IAAqB,OAAMV,qBAAA,CAAIW,IAAJ,CAAS;EAAEH,EAAE,EAAEE;AAAN,CAAT,EAAyBR,cAAA,CAAOC,UAAhC,CAA4C,EAAhG"}